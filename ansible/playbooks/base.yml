---
- name: Set up Python environment with pyenv
  hosts: appserver
  become: true
  vars:
    deploy_user: "ubuntu"  # Define the deploy_user variable
  tasks:
    - name: Install git and other dependencies
      apt:
        pkg:
          - git
          - curl
          - build-essential
          - libssl-dev
          - zlib1g-dev
          - libbz2-dev
          - libreadline-dev
          - libsqlite3-dev
          - wget
          - llvm
          - libncurses5-dev
          - xz-utils
          - tk-dev
          - libffi-dev
          - liblzma-dev
          - libxml2-dev
          - libxmlsec1-dev
        state: latest
        update_cache: true

    - name: Install pyenv
      git:
        repo: 'https://github.com/pyenv/pyenv.git'
        dest: "/home/{{ deploy_user }}/.pyenv"
        version: master
      become_user: "{{ deploy_user }}"

    - name: Set environment variables for pyenv
      lineinfile:
        path: "/home/{{ deploy_user }}/.profile"
        line: "{{ item }}"
      loop:
        - 'export PYENV_ROOT="$HOME/.pyenv"'
        - 'export PATH="$PYENV_ROOT/bin:$PATH"'
        - 'eval "$(pyenv init --path)"'
        - 'eval "$(pyenv init -)"'
      become_user: "{{ deploy_user }}"

    - name: Install Python version using pyenv
      shell: |
        . /home/{{ deploy_user }}/.profile
        pyenv install 3.6.15
        pyenv global 3.6.15
      args:
        executable: /bin/bash
      become_user: "{{ deploy_user }}"

    - name: Ensure pip is installed for the selected Python version
      shell: |
        . /home/{{ deploy_user }}/.profile
        pyenv which python3.6
        curl https://bootstrap.pypa.io/pip/3.6/get-pip.py | pyenv exec python3.6
      args:
        executable: /bin/bash
      become_user: "{{ deploy_user }}"

# ---
# - name: Check && install python
#   hosts: appserver
#   become: true
#   gather_facts: False
#   tasks:

#   - name: Install git
#     become: true
#     apt:
#       pkg:
#         - nano
#         - git
#         - policykit-1
#       state: latest
#       update_cache: true

#   - name: Ensure directory for app code exists
#     file:
#       path: "/home/{{ deploy_user }}/reddit"
#       state: directory
#     tags: deploy-tag
#     become: yes

#   - name: Install dependencies for building Python
#     apt:
#       name:
#         - gcc
#         - build-essential
#         - libssl-dev
#         - zlib1g-dev
#         - libbz2-dev
#         - libreadline-dev
#         - libsqlite3-dev
#         - wget
#         - curl
#         - llvm
#         - libncurses5-dev
#         - xz-utils
#         - tk-dev
#         - libxml2-dev
#         - libxmlsec1-dev
#         - libffi-dev
#         - liblzma-dev
#         - python3-apt
#       state: present
#     become: yes

#   - name: Download Python 3.6.15 source
#     ansible.builtin.get_url:
#       url: "https://www.python.org/ftp/python/3.6.15/Python-3.6.15.tgz"
#       dest: "/tmp/Python-3.6.15.tgz"

#   - name: Extract Python source
#     ansible.builtin.unarchive:
#       src: "/tmp/Python-3.6.15.tgz"
#       dest: "/tmp/"
#       remote_src: yes

#   - name: Compile and install Python 3.6
#     command:
#       cmd: "{{ item }}"
#       chdir: "/tmp/Python-3.6.15"
#     loop:
#       - "./configure --enable-optimizations"
#       - "make"
#       - "make altinstall"
#     become: yes

#   - name: Update the symbolic link for python3
#     command: ln -sf /usr/local/bin/python3.6 /usr/bin/python3
#     become: yes

#   - name: Install pip for Python 3.6
#     shell:
#       cmd: "curl https://bootstrap.pypa.io/pip/3.6/get-pip.py | python3.6"
#     become: yes
